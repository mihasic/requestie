on: [push, pull_request, workflow_dispatch]

name: CI

env:
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: |
          cargo check --all-features

  check_wasm:
    name: Check wasm32
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: |
          cargo check --all-features --lib --target wasm32-unknown-unknown

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev
      - run: |
          cargo test --lib

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: |
          rustup component add rustfmt
      - run: |
          cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: |
          rustup component add clippy
      - run: |
          cargo clippy -- -D warnings

  trunk:
    name: trunk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Download and install Trunk binary
        run: wget -qO- https://github.com/trunk-rs/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
      - name: Build
        run: ./trunk build

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          TARGET: aarch64-apple-darwin
        - os: ubuntu-latest
          TARGET: aarch64-unknown-linux-gnu
        - os: ubuntu-latest
          TARGET: armv7-unknown-linux-gnueabihf
        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-gnu
        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe
    permissions:
      contents: write
    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master
    - name: Install build dependencies - Rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable --profile default --target ${{ matrix.TARGET }} -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install cross
      run: |
        cargo install cross

    - name: Build
      run: |
        cross build --verbose --release --target=${{ matrix.TARGET }}

    - name: Rename
      run: cp target/${{ matrix.TARGET }}/release/requestie${{ matrix.EXTENSION }} requestie-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@master
      with:
        name: requestie-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: requestie-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: svenstaro/upload-release-action@v2
      name: Upload binaries to release
      if: ${{ github.event_name == 'push' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: requestie-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        asset_name: requestie-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        tag: ${{ github.ref }}
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        overwrite: true
